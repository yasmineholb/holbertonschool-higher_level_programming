The ``0-add_integer`` module
======================

Using ``add_integer``
-------------------

import module:

    >>> add_integer = __import__("0-add_integer").add_integer

firt test:

    >>> add_integer(1, 0)
    1

second test:

    >>> add_integer(100, 5002)
    5102

third test:

    >>> add_integer(2, -5)
    -3


	       

tt test:

    >>> add_integer("a", "ee")
    Traceback (most recent call last):
               ...
    TypeError: a must be an integer

tt2 test:

    >>> add_integer("a", 2)
    Traceback (most recent call last):
               ...
    TypeError: a must be an integer


tt3 test:

    >>> add_integer("abb", 2)
    Traceback (most recent call last):
               ...
    TypeError: a must be an integer

tt4 test:

    >>> add_integer("", 0)
    Traceback (most recent call last):
               ...
    TypeError: a must be an integer
    
ttt test:

    >>> add_integer(5, "tet")
    Traceback (most recent call last):
      File "/usr/lib/python3.6/doctest.py", line 1330, in __run
        compileflags, 1), test.globs)
      File "<doctest 0-add_integer.txt[5]>", line 1, in <module>
        add_integer(5, "tet")
      File "/home/yasmine/holbertonschool-higher_level_programming/0x07-python-test_driven_development/0-add_integer.py", line 6, in add_integer
        raise TypeError("b must be an integer")
    TypeError: b must be an integer
   

